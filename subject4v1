<!-- index.html -->
<!-- 
    来源1：
    https://onebox.huawei.com/v/968c03905e78a00c12b550ef93752f17?type=0
    来源2： 
    https://onebox.huawei.com/v/d08c2374ca38822fc001b83bfdd1eced?type=0

    版本：1.0.0.1
 -->
 <!DOCTYPE html>
 <html lang="en">
 <head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>刷题网站</title>
   <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
 </head>
 <body>
 
   <div class="container mt-5" id="app-container"></div>
   <link rel="stylesheet" href="https://cdn.bootcss.com/bootstrap/4.5.0/css/bootstrap.min.css">
   <script src="https://cdn.bootcss.com/jquery/3.5.1/jquery.min.js"></script>
   <script src="https://cdn.bootcss.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
 
   
 </body>
 <script>
 
     // script.js
 // 单题刷题
 const questions = [
 //   {
 //     question: "这是第一道题目吗？",
 //     image: "url_to_image1.jpg",
 //     options: ["是的", "不是"],
 //     correctAnswer: 0,
 //     explanation: "这是第一道题目。",
 //   },
   {
     question: "开发者做这个页面比较匆忙,可能会出现题目和答案不符的地方;原题库也可能会提供错误答案,请谅解。后面也加了一些开发者的题目解析和知识点汇总（画饼）。",
     image: "url_to_image2.jpg",
     options: ["好的","别选这个","来源1： https://onebox.huawei.com/v/968c03905e78a00c12b550ef93752f17?type=0"],
     correctAnswer: 0,
     explanation: "科目四必过。感谢分享资源的好心路人们。By the way, 这个程序没有bug， 只有feature。",
   },
   // 添加更多题目...
   {
           question: "系统要求业务支持4000条/s的入库能力，实际应用中发现业务数据入库速率达到4000条/s,数据积压，服务重启，通过以下哪种方法发现该问题",
           options: ["性能测试覆盖", "压力测试覆盖", "长时间测试覆盖", "边界值设计"],
           explaination: "",
           correctAnswer: 0,
     
 
         },
        
        
         {
            question: "",
            options: ["", "", "", ""],
            explaination: "",
            correctAnswer: 0
          },
 ];
 
 let currentQuestionIndex = 0;
 
 function renderQuestion() {
   const currentQuestion = questions[currentQuestionIndex];
   const appContainer = $("#app-container");
 
   const questionHtml = `
     <div class="card mt-3">
       <img src="${currentQuestion.image}" class="card-img-top" alt="Question Image">
       <div class="card-body">
         <h5 class="card-title">${currentQuestionIndex + 1}. ${currentQuestion.question}</h5>
         <form id="form-${currentQuestionIndex}">
           ${currentQuestion.options.map((opt, optIndex) => `
             <div class="form-check">
               <input class="form-check-input" type="radio" name="question-${currentQuestionIndex}" id="option-${currentQuestionIndex}-${optIndex}" value="${optIndex}">
               <label class="form-check-label" for="option-${currentQuestionIndex}-${optIndex}">
                 ${opt}
               </label>
             </div>
           `).join('')}
         </form>
         <button class="btn btn-primary mt-3" onclick="submitAnswer()">提交答案</button>
         <div id="explanation-${currentQuestionIndex}" class="mt-2" style="display: none;"></div>
       </div>
     </div>
   `;
 
   appContainer.html(questionHtml);
 }
 
// script.js

// ...（之前的代码）

function submitAnswer() {
  const selectedOptionIndex = parseInt($(`input[name='question-${currentQuestionIndex}']:checked`).val(), 10);
  const currentQuestion = questions[currentQuestionIndex];
  const explanationContainer = $(`#explanation-${currentQuestionIndex}`);

  if (selectedOptionIndex === currentQuestion.correctAnswer) {
    explanationContainer.html(`<p class="text-success">回答正确！</p><p>${currentQuestion.explanation}</p>`);
  } else {
    explanationContainer.html(`<p class="text-danger">回答错误。</p><p>${currentQuestion.explanation}</p>`);
  }

  explanationContainer.show();

  // 移除已有的下一题按钮
  const appContainer = $("#app-container");
  appContainer.find('.btn-next-question').remove();

  // 如果还有下一题，显示下一题按钮，否则显示总分
  if (currentQuestionIndex < questions.length - 1) {
    const nextQuestionButton = `<button class="btn btn-primary mt-3 btn-next-question" onclick="nextQuestion()">下一题</button>`;
    appContainer.append(nextQuestionButton);
  } else {
    const resultContainer = `<div id="result-container" class="mt-3"><h4>你的得分：${calculateScore()} / ${questions.length}</h4></div>`;
    appContainer.append(resultContainer);
  }
}

// ...（之后的代码）

 
 function nextQuestion() {
   currentQuestionIndex++;
   renderQuestion();
 }
 
 function calculateScore() {
   let correctCount = 0;
   questions.forEach((q, index) => {
     const selectedOptionIndex = parseInt($(`input[name='question-${index}']:checked`).val(), 10);
     if (selectedOptionIndex === q.correctAnswer) {
       correctCount++;
     }
   });
   return correctCount;
 }
 
 $(document).ready(function() {
   renderQuestion();
 });
 
 </script>
 
 
 </html>
